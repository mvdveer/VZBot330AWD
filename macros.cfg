###############################################
#RatOS MAcros
###############################################


[gcode_macro RatOS]
description: RatOS variable storage macro, will echo variables to the console when run.
# Configuration Defaults
# This is only here to make the config backwards compatible.
# Configuration should exclusively happen in printer.cfg.
variable_relative_extrusion: False
variable_force_absolute_position: False
variable_preheat_extruder: True
variable_preheat_extruder_temp: 150
variable_calibrate_bed_mesh: True
variable_nozzle_priming: "primeblob"
variable_nozzle_prime_start_x: "max" # min, max or number
variable_nozzle_prime_start_y: "min" # min, max or number
variable_nozzle_prime_direction: "auto" # auto, forwards, backwards
variable_filament_unload_length: 130
variable_filament_unload_speed: 5
variable_filament_load_length: 100
variable_filament_load_speed: 10
variable_start_print_park_in: "back"
variable_start_print_park_z_height: 50
variable_start_print_heat_chamber_bed_temp: 115
variable_end_print_park_in: "back"
variable_pause_print_park_in: "back"
variable_macro_travel_speed: 150
variable_macro_z_speed: 10
variable_end_print_park_z_hop: 20
# Possible values: 'sensorless' or 'endstops'.
variable_homing: "endstops"
variable_homing_z_hop: 15
variable_sensorless_x_current: 0.6
variable_sensorless_y_current: 0.9
# Possible values: 'static' or 'stowable'
variable_z_probe: "static"
# Possible Values: 'middle' or an absolute x coordinate
variable_safe_home_x: "middle"
# Possible Values: 'middle' or an absolute y coordinate
variable_safe_home_Y: "middle"
gcode:
  ECHO_RatOS_VARS

[gcode_macro PRIME_LINE]
description: Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode:
  SAVE_GCODE_STATE NAME=prime_line_state
  {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
    {% set x_start = printer.toolhead.axis_minimum.x + 5 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
    {% set x_start = printer.toolhead.axis_maximum.x - 5 %}
  {% else %}
    {% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
  {% endif %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
    {% set y_start = 5 %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
    {% set y_start = printer.toolhead.axis_maximum.y - 5 %}
    {% set y_factor = -1 %}
  {% else %}
    {% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
    {% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
      {% set y_factor = 1 %}
    {% else %}
      {% set y_factor = -1 %}
    {% endif %}
  {% endif %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
    {% set y_factor = -1 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Absolute extrusion
  M82
  M117 Priming nozzle with prime line..
  #RESPOND MSG="Priming nozzle with prime line.."
  # Lift 5 mm
  G1 Z5 F{z_speed}
  # Move to prime area
  G1 X{x_start} Y{y_start} F{speed}
  # Get ready to prime
  G1 Z0.3 F{z_speed}
  # Reset extrusion distance
  G92 E0
  # Prime nozzle 
  G1 Y{y_start + (70 * y_factor)} E16 F1200
  # Wipe
  G1 Y{y_start + (90 * y_factor)} F{speed}
  RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro PRIME_BLOB]
description: Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode:
  SAVE_GCODE_STATE NAME=prime_blob_state
  M117 Priming nozzle with prime blob..
  #RESPOND MSG="Priming nozzle with prime blob.."
  {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
    {% set x_start = printer.toolhead.axis_minimum.x + 5 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
    {% set x_start = printer.toolhead.axis_maximum.x - 5 %}
  {% else %}
    {% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
  {% endif %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
    {% set y_start = 40 %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
    {% set y_start = printer.toolhead.axis_maximum.y - 5 %}
    {% set y_factor = -1 %}
  {% else %}
    {% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
    {% if printer["gcode_macro RatOS"].nozzle_prime_start_y|float < printer.toolhead.axis_maximum.y / 2 %}
      {% set y_factor = 1 %}
    {% else %}
      {% set y_factor = -1 %}
    {% endif %}
  {% endif %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
    {% set y_factor = -1 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Relative extrusion
  M83
  # Lift 5 mm
  G1 Z5 F{z_speed}
  # move to blob position
  G1 X{x_start} Y{y_start} Z0.5 F{speed}
  # Extrude a blob
  G1 F60 E20
  # 40% fan
  M106 S102 
  # Move the extruder up by 5mm while extruding, breaks away from blob
  G1 Z5 F100 E5  
  # Move to wipe position, but keep extruding so the wipe is attached to blob
  G1 F200 Y{y_start + (25 * y_factor)} E1 
  # Go down diagonally while extruding
  # Broken down in z moves under 2mm as a workaround for a tuning tower test.
  # The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
  G1 F200 Y{y_start + (30 * y_factor)} Z3.8 E0.5
  G1 F200 Y{y_start + (35 * y_factor)} Z2.6 E0.5
  G1 F200 Y{y_start + (40 * y_factor)} Z1.4 E0.5
  G1 F200 Y{y_start + (45 * y_factor)} Z0.2 E0.5
  # 0% fan
  M106 S0
  # small wipe line
  G1 F200 Y{y_start + (50 * y_factor)} Z0.2 E0.6 
  # Break away wipe
  G1 F{speed} Y{y_start + (100 * y_factor)}
  RESTORE_GCODE_STATE NAME=prime_blob_state





########################################
# Macros
########################################

[gcode_macro PRINT_START]
gcode:
    STATUS_READY
    BED_MESH_CLEAR
    G90      #Absolute positioning
    #STATUS_CLEANING
    #M117 Cleaning Nozzle .........
    #CLEAN_NOZZLE
    STATUS_HOMING
    M117 Homing...
    G28
    STATUS_HEATING
    M117 Heating bed ......
    M140 S{params.BED_TEMP}
    M190 S{params.BED_TEMP}
    #M109 S150
    STATUS_CLEANING
    #M117 Nozzle scrub before QGL ......
    #CLEAN_NOZZLE
    STATUS_LEVELING
    #M117 Leveling Gantry ........
    #QUAD_GANTRY_LEVEL
    STATUS_MESHING
    M117 Adaptive bed mesh ......
    BED_MESH_CALIBRATE
    M117 Loading Mesh ........
    BED_MESH_PROFILE Load=default
    M117 Move to Print area  .......
    SMART_PARK
    #G0 X155 Y155 Z20 F3600
    STATUS_HEATING
    M117 Heating Toolhead .....
    M104 S{params.TOOL_TEMP}
    M109 S{params.TOOL_TEMP}
    STATUS_READY
    VORON_PURGE
    #PRIME_BLOB
    STATUS_READY
    G90
    STATUS_PRINTING
    M117 Starting Print .......


[gcode_macro END_PRINT]
gcode:
    STATUS_BUSY
    # Move nozzle away from print while retracting
    G91    #Relative positioning
    G1 X-5 Y-5 E-3 F300    #move toolhead away from print
    G1 E-8 F800   # retract filament from meltzone
    G1 Z20 F3000   # Raise nozzle by 20mm
    G90   # Absolute positioning
    G1 X300 Y300  #Move toolhead to park position
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Disable steppers
    # M84
    STATUS_READY

[gcode_macro PRINT_END]
gcode:
    STATUS_BUSY
    M400
    G92 E0
    # Move nozzle away from print while retracting
    G1 X-5 Y-5 E-3 F300    #move toolhead away from print
    G1 E-10 F3600   # retract filament from meltzone
    G91    #Relative positioning
    G1 Z20 F3000   # Raise nozzle by 20mm
    G90   # Absolute positioning
    #G1 X10 Y345  #Move toolhead to park position
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    G0 X300 Y300 F3600    # park nozzle at rear
    M107
    BED_MESH_CLEAR
   #Disable steppers
    M84
    STATUS_READY


[gcode_macro PRIME_LINE_MIN]
gcode: 
    M117 Prime Line ..........
    G92 E0.0            #reset extruder distance position
    G1 X20 Y40 Z0.3 F3000       #move to prime line position
    G1 X70 E10.0 F1000  #intro line
    G1 X190 E30 F500   # intro line
    G92 E0.0      #reset extruder distance position
    M117 Purging ..........


[gcode_macro LOAD_MESH_TEMP]
#default_parameter_BED_TEMPERATURE: 0
#default_parameter_FORCE: 0
gcode:
    {action_respond_info("- AUTOMATED BED MESH GENERATOR -")}
    {% if BED_TEMPERATURE|int < 30 %}
        {action_respond_info("Your bed temp is to low, make sure it is at least 30 or higher")}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 0 %}
            BED_MESH_PROFILE LOAD={BED_TEMPERATURE}
            {action_respond_info("Succesfully loaded bed_mesh "+ BED_TEMPERATURE)}
        {% else %}
            {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 1 %}
                BED_MESH_PROFILE REMOVE={BED_TEMPERATURE}
            {% endif %}
            {action_respond_info("bed_mesh not defined, your bed temperature will go up!")}
            {action_respond_info("We will probe the bed and save the mesh as bed_mesh "+ BED_TEMPERATURE)}
            ADD_BED_MESH TARGET_TEMP={BED_TEMPERATURE}
        {% endif %}
    {% endif %}

[gcode_macro ADD_BED_MESH]
#default_parameter_TARGET_TEMP: 30
gcode:
    M190 S{TARGET_TEMP} # Wait for the bed to hit TARGET_TEMP
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE={TARGET_TEMP}

[gcode_macro SET_RETRACTIONLENGTH]
gcode:
  SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
  GET_RETRACTION

#[gcode_macro G29]
#gcode: 
#  G28
#  BED_MESH_CALIBRATE
#  BED_MESH_PROFILE SAVE=p1
#  G1 X10 Y10 Z5 F4000

#[gcode_macro M600]
#default_parameter_X: 10
#default_parameter_Y: 0
#default_parameter_Z: 10
#gcode:
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{10}
#    G90
#    G1 X{330} Y{330} F3000
#    G91
#    G1 E-50 F1000
#    RESTORE_GCODE_STATE NAME=M600_state

####################################################
#    Mainsail klipper macro definitions
#####################################################

## Copyright (C) 2022 Alex Zellner <alexander.zellner@googlemail.com>

## Customization:

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos  : False ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x   : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y   : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz  : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
variable_retract         : 1.0   ; the value to retract while PAUSE
variable_cancel_retract  : 3.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract   : 35.0  ; retract speed in mm/s
variable_unretract       : 1.0   ; the value to unretract while RESUME
variable_speed_unretract : 35.0  ; unretract speed in mm/s
variable_speed_hop       : 15.0  ; z move speed in mm/s
variable_speed_move      : 100.0 ; move speed in mm/s
variable_park_at_cancel  : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]

## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 

gcode:

## After you uncomment it add your custom values

## You now can use your PAUSE macro direct in your M600 here a short example:

#[gcode_macro M600]
#description: Filament change
#gcode: PAUSE X=10 Y=10 Z_MIN=50

## That will park your head front left with a minimum height of 50mm above the bed. If your head
## is already above 50mm it will use only the z_hop specified with dz.


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set allow_park = False if not macro_found
                 else False if client.park_at_cancel is not defined
                 else True  if client.park_at_cancel|lower == 'true'
                 else False %}
  {% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  ##### end of definitions #####
  {% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
  {% if printer.extruder.can_extrude %}
    M83
    G1 E-{retract} F{sp_retract}
    {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %} 
  {% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
  {% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G11
    {% else %}
      M83
      G1 E{unretract} F{sp_unretract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
  {% endif %}  
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}  

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true' 
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}
  {% set retract      = 1.0  if not macro_found else client.retract|default(1.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  {% set sp_hop       = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move      = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set act = printer.toolhead.position %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set cone = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch'] 
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, max.z]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed 
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G10
    {% else %}
      M83
      G1 E-{retract} F{sp_retract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro M0]
gcode:
    G4 P5000   


###############################################################################################
# VZBOT MACROS
###############################################################################################
